<?php
class MetalComponent extends Object {

	var $_imagePath;
	var $_scriptPath;

	function generate($text, $style = 'wb') {


		$this->_imagePath = APP.'webroot'.DS.'images';
		$this->_scriptPath = APP.'vendors'.DS.'metallify';

		ini_set('safe_mode_exec_dir', $this->_scriptPath);
		ini_set('safe_mode_include_dir', $this->_scriptPath);

		$text = $this->_filter($text);
		
		switch($style) {
			case 'wb':
				$colors = 'white black';
				break;
			case 'bw':
				$colors = 'black white';
				break;
			case 'kill':
				$colors = 'red black';
				break;
			case 'lightning':
				$colors = 'lightblue purple';
				break;
			case 'puppets':
				$colors = 'grey orange';
				break;
			case 'justice':
				$colors = 'green white';
				break;
			default:
				$colors = 'white black';
				break;
		}
		$ip = $this->_imagePath;
		$sp = $this->_scriptPath;
		
		$this->Badge->create();
		$this->Badge->save();
		$id = $this->Badge->getLastInsertID();

		$image = new Imagick("$ip/$id.jpg");
		
		$image->labelImage($text);
		$image->setFont("$sp/fonts/PastorofMuppets.ttf");
		
		$image->writeImage();

		// Embed EXIF data - Generated by Metallify

/*		$command = "$sp/metallify.sh $text $colors $sp $ip";
		echo $command;
		exec($command, $output = array());
*/		
		// resize and all that , fixed height, relative width for varying text length
 		
		
		return $text;
	}
	
	private function _filter($text) {

		$old = $text;

		// get rid of non-alphanumeric characters
		$text = preg_replace('/[^0-9a-zA-Z]/', '', $text);

		$last = strtoupper(substr($text,strlen($text)-1));
		$text = ucfirst(strtolower(substr($text, 0, strlen($text)-1)));
		$text .= $last;
		$this->log("$old => (filter) => $text");
		return $text;
	}

	function getBadgePath($badge, $size = 'l') {
		return $this->_imagePath.DS.$badge['filename'];
	}

}
?>